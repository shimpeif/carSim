{"version":3,"sources":["Client.js","withRoot.js","App.js","AppStyles.js","serviceWorker.js","index.js"],"names":["Client","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","send_msg","msg","ws","send","JSON","stringify","var_add","v","cmd","var_name","var_unpause","var_cycle","p","period","var_clear","addVariable","setState","variables","concat","toConsumableArray","state","data","clearVariables","input_processor","pycode","sim_start","sim_freeze","sim_shutdown","sim_step","BoxButton","_ref","text","_ref$color","color","_ref$fullWidth","fullWidth","onClick","react_default","a","createElement","dist","flexGrow","flexShrink","Button","className","classes","button","variant","size","unit","time","console","log","WebSocket","onopen","e","onmessage","message","parse","values","_this2","display","AppBar","position","appbar","Toolbar","toolbar","alignItems","src","height","Typography","appbartitle","flexDirection","Drawer","drawer","paper","drawerPaper","anchor","Divider","List","map","index","ListItem","key","ListItemIcon","MoveToInbox_default","Mail_default","ListItemText","primary","margin","Paper","justifyContent","marginRight","TextField","label","value","toFixed","disabled","timer","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails","Box","bgcolor","padding","tv","search","searchIcon","Search_default","InputBase","placeholder","root","inputRoot","input","inputInput","inputProps","aria-label","TreeView","treeview","defaultCollapseIcon","defaultExpandIcon","ChevronRight_default","TreeItem","nodeId","dividermargin","divider","flex","paddingRight","Table","tvtable","TableHead","TableRow","hover","TableCell","align","TableBody","indexOf","textfield","onKeyPress","ev","target","preventDefault","mockup","React","Component","theme","createMuiTheme","palette","main","secondary","type","withRoot","MuiThemeProvider","CssBaseline","App","Client_Client","withStyles","width","marginLeft","marginTop","spacing","marginBottom","maxWidth","body","borderRight","defineProperty","mixins","zIndex","borderRadius","shape","backgroundColor","fade","common","white","&:hover","breakpoints","up","pointerEvents","transition","transitions","create","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.593ee672.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport MuiBox from '@material-ui/core/Box';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Flex, Box } from 'reflexbox';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport Drawer from '@material-ui/core/Drawer';\n\nimport List from '@material-ui/core/List';\n\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Select from '@material-ui/core/Select';\n\nexport default class Client extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      variables: [],\n      data: [],\n      unit: [],\n      time: 0.0,\n    };\n    console.log('Client created');\n    this.ws = new WebSocket(\n      'ws://localhost:8888/api/ws/VariableServer',\n      'myProtocol',\n    );\n    this.ws.onopen = e => {\n      this.var_cycle(100);\n      this.var_unpause();\n      //this.var_add(\"trick_sys.sched.time_tics\");\n      console.log('opened');\n    };\n    this.ws.onmessage = e => {\n      console.log('Message received');\n      let message = JSON.parse(e.data);\n      console.log(message);\n      this.setState({ time: message.time, data: message.values });\n    };\n  }\n\n  send_msg = msg => {\n    //console.log(JSON.stringify(msg));\n    this.ws.send(JSON.stringify(msg));\n  };\n\n  var_add = v => {\n    let msg = {\n      cmd: 'var_add',\n      var_name: v,\n    };\n    this.send_msg(msg);\n  };\n\n  var_unpause = () => {\n    let msg = {\n      cmd: 'var_unpause',\n    };\n    this.send_msg(msg);\n  };\n\n  var_cycle = p => {\n    let msg = {\n      cmd: 'var_cycle',\n      period: p,\n    };\n    this.send_msg(msg);\n  };\n\n  var_clear = () => {\n    let msg = {\n      cmd: 'var_clear',\n    };\n    this.send_msg(msg);\n  };\n\n  addVariable = v => {\n    this.setState({\n      variables: [...this.state.variables, v],\n      data: [...this.state.data, 0.0],\n    });\n    this.var_add(v);\n  };\n\n  clearVariables = () => {\n    this.setState({ variables: [], data: [] });\n    this.var_clear();\n  };\n\n  input_processor = cmd => {\n    let msg = {\n      cmd: 'python',\n      pycode: cmd,\n    };\n    this.send_msg(msg);\n  };\n\n  sim_start = () => {\n    this.input_processor('trick.exec_run()');\n  };\n\n  sim_freeze = () => {\n    this.input_processor('trick.exec_freeze()');\n  };\n  sim_shutdown = () => {\n    this.input_processor('trick.stop()');\n  };\n  sim_step = () => {\n    /* TODO handle debug stepping mode\n    this.input_processor('trick.debug_pause_on()');\n      this.input_processor('trick.exec_run()');\n      */\n  };\n\n  BoxButton = ({ text, color = 'primary', fullWidth = true, onClick }) => (\n    <Box flexGrow={1} flexShrink={1}>\n      <Button\n        className={this.props.classes.button}\n        variant=\"contained\"\n        color={color}\n        size=\"large\"\n        fullWidth={fullWidth}\n        onClick={onClick}\n      >\n        {text}\n      </Button>\n    </Box>\n  );\n\n  render() {\n    const { classes } = this.props;\n    //console.log(classes);\n    return (\n      <div display=\"flex\">\n        <AppBar position=\"fixed\" className={classes.appbar}>\n          <Toolbar className={classes.toolbar}>\n            <Flex alignItems=\"center\" flexGrow={1}>\n              <Box>\n                <img src=\"TrickLogoSmall.png\" height={45} />\n              </Box>\n              <Box>\n                <Typography variant=\"h5\" className={classes.appbartitle}>\n                  Trick Dashboard\n                </Typography>\n              </Box>\n              <Box flexGrow={1} />\n              <Box flexDirection=\"column\">\n                <Typography variant=\"h6\">\n                  SIM_cannon_numeric{'\\u00A0'}\n                  {'\\u00A0'}\n                  {'\\u00A0'}\n                </Typography>\n              </Box>\n              <Box>\n                <Typography variant=\"h6\">localhost:8888</Typography>\n              </Box>\n            </Flex>\n          </Toolbar>\n        </AppBar>\n        <Flex>\n          <Box>\n            <Drawer\n              className={classes.drawer}\n              variant=\"permanent\"\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              anchor=\"left\"\n            >\n              <div className={classes.toolbar} />\n              <Divider />\n              <List>\n                {['Home', 'Wiki', 'Data Recording', 'Strip Chart'].map(\n                  (text, index) => (\n                    <ListItem button key={text}>\n                      <ListItemIcon>\n                        {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                      </ListItemIcon>\n                      <ListItemText primary={text} />\n                    </ListItem>\n                  ),\n                )}\n              </List>\n              <Divider />\n              <List>\n                {['Sniffer', 'Environment', 'Settings'].map((text, index) => (\n                  <ListItem button key={text}>\n                    <ListItemIcon>\n                      {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                    </ListItemIcon>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                ))}\n              </List>\n            </Drawer>\n          </Box>\n          <Flex flexDirection=\"column\" flexGrow={1}>\n            <Box margin={2}>\n              <Paper className={classes.paper}>\n                <Toolbar className={classes.toolbar}>\n                  <Typography variant=\"h6\" color=\"textPrimary\">\n                    Sim Control\n                  </Typography>\n                </Toolbar>\n                <Flex justifyContent=\"space-between\">\n                  <Flex flexGrow={1}>\n                    <Flex\n                      flexDirection=\"column\"\n                      marginRight={25}\n                      flexShrink={1}\n                    >\n                      <this.BoxButton text=\"step\" onClick={this.sim_step} />\n                      <this.BoxButton text=\"start\" onClick={this.sim_start} />\n                      <this.BoxButton text=\"freeze\" onClick={this.sim_freeze} />\n                      <this.BoxButton\n                        text=\"shutdown\"\n                        color=\"secondary\"\n                        onClick={this.sim_shutdown}\n                      />\n                    </Flex>\n                    <Flex flexDirection=\"column\">\n                      <this.BoxButton text=\"data record on\" />\n                      <this.BoxButton text=\"realtime on\" />\n                      <this.BoxButton text=\"dump checkpoint\" />\n                      <this.BoxButton text=\"load checkpoint\" />\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    flexDirection=\"column\"\n                    flexGrow={3}\n                    flexShrink={0}\n                    margin={25}\n                  >\n                    <Box>\n                      <TextField\n                        variant=\"outlined\"\n                        label=\"Sim Time (s)\"\n                        value={this.state.time.toFixed(2)}\n                        disabled={true}\n                        className={classes.timer}\n                      />\n                    </Box>\n                    <Box>\n                      <TextField\n                        variant=\"outlined\"\n                        label=\"playback speed\"\n                        value=\"1.0\"\n                        className={classes.timer}\n                      />\n                    </Box>\n                  </Flex>\n                </Flex>\n                <ExpansionPanel>\n                  <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    Status Messages\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                    <Typography>\n                      <MuiBox bgcolor=\"black\" padding={1}>\n                        {\n                          '|L   1|2019/08/06,09:29:13|thanos| |T 0|1.500000| Freeze OFF.'\n                        }\n                        <br />\n                        {\n                          '|L  10|2019/08/06,09:29:14|thanos| |T 0|3.200000| 0x7f6950000fd0 tag=<SimControl> var_server received: trick.exec_freeze()'\n                        }\n                        <br />\n                        <br />\n                        {\n                          '|L   1|2019/08/06,09:29:14|thanos| |T 0|3.300000| Freeze ON. Simulation time holding at 3.300000 seconds.'\n                        }\n                        <br />\n                        {\n                          '|L  10|2019/08/06,09:29:21|thanos| |T 0|3.300000| 0x7f6950000fd0 tag=<SimControl> var_server received: trick.exec_run()'\n                        }\n                        <br />\n                        <br />\n                        {\n                          '|L   1|2019/08/06,09:29:21|thanos| |T 0|3.300000| Freeze OFF.'\n                        }\n                        <br />\n                        {\n                          '|L  10|2019/08/06,09:29:23|thanos| |T 0|4.600000| 0x7f6950000fd0 tag=<SimControl> var_server received: trick.exec_freeze()'\n                        }\n                      </MuiBox>\n                    </Typography>\n                  </ExpansionPanelDetails>\n                </ExpansionPanel>\n              </Paper>\n            </Box>\n            <Box margin={2}>\n              <Paper className={classes.tv}>\n                <Toolbar className={classes.toolbar}>\n                  <Typography variant=\"h6\" color=\"textPrimary\">\n                    Trick View\n                  </Typography>\n                  <div className={classes.search}>\n                    <div className={classes.searchIcon}>\n                      <SearchIcon />\n                    </div>\n                    <InputBase\n                      placeholder=\"Search…\"\n                      classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                      }}\n                      inputProps={{ 'aria-label': 'search' }}\n                    />\n                  </div>\n                </Toolbar>\n                <Flex justifyContent=\"space-between\">\n                  <Flex flexDirection=\"Column\">\n                    <TreeView\n                      className={classes.treeview}\n                      defaultCollapseIcon={<ExpandMoreIcon />}\n                      defaultExpandIcon={<ChevronRightIcon />}\n                    >\n                      <TreeItem nodeId=\"1\" label=\"Trick Variables\">\n                        <TreeItem nodeId=\"2\" label=\"trick_cmd_args\">\n                          <TreeItem nodeId=\"3\" label=\"dummy data\" />\n                        </TreeItem>\n                        <TreeItem nodeId=\"4\" label=\"trick_sys\">\n                          <TreeItem nodeId=\"5\" label=\"dummy data\" />\n                        </TreeItem>\n                        <TreeItem nodeId=\"6\" label=\"trick_ip\">\n                          <TreeItem nodeId=\"7\" label=\"dummy data\" />\n                        </TreeItem>\n                        <TreeItem nodeId=\"8\" label=\"trick_vs\">\n                          <TreeItem nodeId=\"9\" label=\"dummy data\" />\n                        </TreeItem>\n                      </TreeItem>\n                      <TreeItem nodeId=\"10\" label=\"Dynamic Allocations\">\n                        <TreeItem nodeId=\"11\" label=\"dyn_integloop\">\n                          <TreeItem nodeId=\"12\" label=\"name\" />\n                          <TreeItem nodeId=\"13\" label=\"id\" />\n                          <TreeItem nodeId=\"14\" label=\"integ_sched\">\n                            <TreeItem nodeId=\"15\" label=\"dummy data\" />\n                          </TreeItem>\n                        </TreeItem>\n                      </TreeItem>\n                      <TreeItem nodeId=\"16\" label=\"dyn\">\n                        <TreeItem nodeId=\"17\" label=\"name\" />\n                        <TreeItem nodeId=\"18\" label=\"id\" />\n                        <TreeItem nodeId=\"19\" label=\"cannon\">\n                          <TreeItem nodeId=\"20\" label=\"vel0[2]\" />\n                          <TreeItem nodeId=\"21\" label=\"pos0[2]\" />\n                          <TreeItem nodeId=\"22\" label=\"init_speed\" />\n                          <TreeItem nodeId=\"23\" label=\"init_angle\" />\n                          <TreeItem nodeId=\"24\" label=\"g\" />\n                          <TreeItem nodeId=\"25\" label=\"acc[2]\" />\n                          <TreeItem nodeId=\"26\" label=\"vel[2]\" />\n                          <TreeItem nodeId=\"27\" label=\"pos[2]\" />\n                          <TreeItem nodeId=\"28\" label=\"time\" />\n                          <TreeItem nodeId=\"29\" label=\"timeRate\" />\n                          <TreeItem nodeId=\"30\" label=\"impact\" />\n                          <TreeItem nodeId=\"31\" label=\"impactTime\" />\n                          <TreeItem nodeId=\"32\" label=\"rf\">\n                            <TreeItem nodeId=\"33\" label=\"dummy data\" />\n                          </TreeItem>\n                          <TreeItem nodeId=\"34\" label=\"connection\">\n                            <TreeItem nodeId=\"36\" label=\"connection\">\n                              <TreeItem nodeId=\"37\" label=\"connection\">\n                                <TreeItem nodeId=\"38\" label=\"connection\">\n                                  <TreeItem nodeId=\"39\" label=\"connection\">\n                                    <TreeItem nodeId=\"40\" label=\"connection\">\n                                      <TreeItem nodeId=\"41\" label=\"connection\">\n                                        <TreeItem\n                                          nodeId=\"35\"\n                                          label=\"dummy data\"\n                                        />\n                                      </TreeItem>\n                                    </TreeItem>\n                                  </TreeItem>\n                                </TreeItem>\n                              </TreeItem>\n                            </TreeItem>\n                          </TreeItem>\n                        </TreeItem>\n                        <TreeItem nodeId=\"36\" label=\"http\">\n                          <TreeItem nodeId=\"37\" label=\"name\" />\n                          <TreeItem nodeId=\"38\" label=\"id\" />\n                          <TreeItem nodeId=\"39\" label=\"http_server\">\n                            <TreeItem nodeId=\"40\" label=\"dummy data\" />\n                          </TreeItem>\n                        </TreeItem>\n                      </TreeItem>\n                    </TreeView>\n                  </Flex>\n                  <Flex flexDirection=\"column\">\n                    <Box className={classes.dividermargin}></Box>\n                    <Box className={classes.divider} flex={1}></Box>\n                    <Box className={classes.dividermargin}></Box>\n                  </Flex>\n                  <Flex flexDirection=\"column\" flexGrow={1}>\n                    <Box flexGrow={1} paddingRight={50}>\n                      <Table className={classes.tvtable}>\n                        <TableHead>\n                          <TableRow hover={true}>\n                            <TableCell>Variable</TableCell>\n                            <TableCell align=\"right\">Value</TableCell>\n                            <TableCell align=\"right\">Unit</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {this.state.variables.map(v => (\n                            <TableRow key={v} hover={true}>\n                              <TableCell>{v}</TableCell>\n                              <TableCell align=\"right\">\n                                {this.state.data[\n                                  this.state.variables.indexOf(v)\n                                ] &&\n                                this.state.data[this.state.variables.indexOf(v)]\n                                  .toFixed\n                                  ? this.state.data[\n                                      this.state.variables.indexOf(v)\n                                    ].toFixed(3)\n                                  : this.state.data[\n                                      this.state.variables.indexOf(v)\n                                    ]}\n                              </TableCell>\n                              <TableCell align=\"right\">\n                                {this.state.unit[\n                                  this.state.variables.indexOf(v)\n                                ] &&\n                                this.state.unit[this.state.variables.indexOf(v)]\n                                  .toFixed\n                                  ? this.state.unit[\n                                      this.state.variables.indexOf(v)\n                                    ].toFixed(3)\n                                  : this.state.unit[\n                                      this.state.variables.indexOf(v)\n                                    ]}\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </Box>\n                    <Flex flexDirection=\"row\">\n                      <Box>\n                        <TextField\n                          className={classes.textfield}\n                          variant=\"outlined\"\n                          label=\"Add Variable\"\n                          onKeyPress={ev => {\n                            if (ev.key === 'Enter') {\n                              if (ev.target.value !== '') {\n                                this.addVariable(ev.target.value);\n                                ev.target.value = '';\n                              }\n                              ev.preventDefault();\n                            }\n                          }}\n                        ></TextField>\n                      </Box>\n                      <this.BoxButton\n                        text=\"clear\"\n                        onClick={this.clearVariables}\n                        fullWidth={false}\n                      />\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Paper>\n            </Box>\n            <Box>\n              <Paper className={classes.mockup}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                  This web application mostly serves as a mockup for now. Most of the elements are not\n                  functional. The following buttons and fields are currently functional: START, FREEZE, SHUTDOWN, Add\n                  Variable, and CLEAR\n                </Typography>\n              </Paper>\n            </Box>\n          </Flex>\n        </Flex>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport cyan from '@material-ui/core/colors/cyan';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport green from '@material-ui/core/colors/green';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {main: \"#5d6a73\" /* #333f48 is dark */},\n    secondary: {main: \"#bf5700\" /* choose f88638 for a lighter color */},\n    type:\"dark\",\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import React from 'react';\nimport Client from './Client';\nimport { withStyles } from '@material-ui/core/styles';\nimport withRoot from './withRoot';\nimport styles from './AppStyles';\n\n/*\nfunction App(props) {\n  const { classes } = props;\t\n  return (<Client classes={classes}></Client>);\n}\n*/\n\nclass App extends React.Component {\n\trender() {\n\t  const { classes } = this.props;\n\t  console.log(classes);\t\n\t  return (<Client classes={classes}></Client>);\n\t}\n}\n\n\n\nexport default withRoot(withStyles(styles)(App));","import { fade } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nexport default theme => ({\n\n  root: {\n    display: 'flex',\n  },\n\n  toolbar: {},\n\n  appbar: { width: `calc(100% - ${drawerWidth}px)`, marginLeft: drawerWidth },\n\n  paper: {\n    margin: '0 auto',\n    marginTop: theme.spacing(20),\n    marginBottom: theme.spacing(0),\n    maxWidth: 800,\n  },\n\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n\n  drawerPaper: {\n    width: drawerWidth,\n  },\n\n  tv: {\n    margin: '0 auto',\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(5),\n    maxWidth: 800,\n  },\n\n  mockup: {\n    margin: '0 auto',\n    maxWidth: 800,\n    padding: theme.spacing(3),\n  },\n\n  appbartitle: {\n    marginLeft: theme.spacing(1),\n  },\n\n  tvtable: {\n    margin: theme.spacing(3),\n    paddingRight: theme.spacing(2),\n    marginLeft: 0,\n  },\n\n  body: {\n    marginTop: theme.spacing(20),\n  },\n\n  textfield: {\n    margin: theme.spacing(1),\n  },\n\n  divider: {\n    borderRight: '0.1em solid ' + theme.palette.divider,\n    margin: theme.spacing(300),\n  },\n\n  button: {\n    margin: theme.spacing(2),\n  },\n\n  timer: {\n    margin: theme.spacing(2),\n  },\n\n  margin: {\n    margin: theme.spacing(1),\n  },\n\n  dividermargin: {\n    height: theme.spacing(1),\n  },\n\n  toolbar: theme.mixins.toolbar,\n\n  appbar: {\n    marginBottom: theme.spacing(20),\n    zIndex: theme.zIndex.drawer + 1,\n  },\n\n  treeview: {\n    margin: theme.spacing(2),\n    marginTop: theme.spacing(5),\n    padding: theme.spacing(1),\n  },\n\n  div: {},\n\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  inputRoot: {\n    color: 'inherit',\n  },\n\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}